/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type SpdxDocument30 = {
  "@context": "https://spdx.org/rdf/3.0.1/spdx-context.jsonld";
  [k: string]: unknown;
} & (
  | {
      /**
       * Top level container for JSON-LD objects
       */
      "@graph": AnyClass[];
      [k: string]: unknown;
    }
  | AnyClass1
);
export type AnyClass =
  | Ai_EnergyConsumption
  | Ai_EnergyConsumptionDescription
  | Ai_EnergyUnitType
  | Ai_SafetyRiskAssessmentType
  | AnnotationType
  | CreationInfo
  | DictionaryEntry
  | ExternalIdentifier
  | ExternalIdentifierType
  | ExternalMap
  | ExternalRef
  | ExternalRefType
  | HashAlgorithm
  | IndividualElement
  | LifecycleScopeType
  | NamespaceMap
  | PackageVerificationCode
  | PositiveIntegerRange
  | PresenceType
  | ProfileIdentifierType
  | Relationship
  | RelationshipCompleteness
  | RelationshipType
  | SpdxDocument
  | SupportType
  | Tool
  | Dataset_ConfidentialityLevelType
  | Dataset_DatasetAvailabilityType
  | Dataset_DatasetType
  | Expandedlicensing_ListedLicenseException
  | Extension_CdxPropertyEntry
  | Security_CvssSeverityType
  | Security_ExploitCatalogType
  | Security_SsvcDecisionType
  | Security_VexJustificationType
  | Simplelicensing_LicenseExpression
  | Simplelicensing_SimpleLicensingText
  | Software_ContentIdentifier
  | Software_ContentIdentifierType
  | Software_FileKindType
  | Software_SbomType
  | Software_SoftwarePurpose
  | Build_Build
  | Agent
  | Annotation
  | Bundle
  | Hash
  | LifecycleScopedRelationship
  | Organization
  | Person
  | SoftwareAgent
  | Expandedlicensing_ConjunctiveLicenseSet
  | Expandedlicensing_CustomLicenseAddition
  | Expandedlicensing_DisjunctiveLicenseSet
  | Expandedlicensing_IndividualLicensingInfo
  | Expandedlicensing_ListedLicense
  | Expandedlicensing_OrLaterOperator
  | Expandedlicensing_WithAdditionOperator
  | Extension_CdxPropertiesExtension
  | Security_CvssV2VulnAssessmentRelationship
  | Security_CvssV3VulnAssessmentRelationship
  | Security_CvssV4VulnAssessmentRelationship
  | Security_EpssVulnAssessmentRelationship
  | Security_ExploitCatalogVulnAssessmentRelationship
  | Security_SsvcVulnAssessmentRelationship
  | Security_Vulnerability
  | Bom
  | Expandedlicensing_CustomLicense
  | Security_VexAffectedVulnAssessmentRelationship
  | Security_VexFixedVulnAssessmentRelationship
  | Security_VexNotAffectedVulnAssessmentRelationship
  | Security_VexUnderInvestigationVulnAssessmentRelationship
  | Software_File
  | Software_Package
  | Software_Sbom
  | Software_Snippet
  | Ai_AIPackage
  | Dataset_DatasetPackage;
export type Ai_EnergyConsumption = {
  "@id"?: BlankNodeOrIRI;
  type?: "ai_EnergyConsumption";
  [k: string]: unknown;
} & Ai_EnergyConsumptionProps;
export type BlankNodeOrIRI = IRI | BlankNode;
export type IRI = string;
export type BlankNode = string;
export type Ai_EnergyConsumptionProps = SHACLClass & {
  ai_finetuningEnergyConsumption?: PropAi_EnergyConsumptionAiFinetuningEnergyConsumption[];
  ai_inferenceEnergyConsumption?: PropAi_EnergyConsumptionAiFinetuningEnergyConsumption[];
  ai_trainingEnergyConsumption?: PropAi_EnergyConsumptionAiFinetuningEnergyConsumption[];
  [k: string]: unknown;
};
export type PropAi_EnergyConsumptionAiFinetuningEnergyConsumption = Ai_EnergyConsumptionDescription | BlankNodeOrIRI;
export type Ai_EnergyConsumptionDescription = {
  "@id"?: BlankNodeOrIRI;
  type?: "ai_EnergyConsumptionDescription";
  [k: string]: unknown;
} & Ai_EnergyConsumptionDescriptionProps;
export type Ai_EnergyConsumptionDescriptionProps = SHACLClass & {
  ai_energyQuantity: PropAi_EnergyConsumptionDescriptionAiEnergyQuantity;
  ai_energyUnit: PropAi_EnergyConsumptionDescriptionAiEnergyUnit;
  [k: string]: unknown;
};
export type PropAi_EnergyConsumptionDescriptionAiEnergyQuantity = number | string;
export type PropAi_EnergyConsumptionDescriptionAiEnergyUnit = "kilowattHour" | "megajoule" | "other";
export type Ai_EnergyUnitType = {
  "@id"?: BlankNodeOrIRI;
  type?: "ai_EnergyUnitType";
  [k: string]: unknown;
} & Ai_EnergyUnitTypeProps;
export type Ai_EnergyUnitTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type Ai_SafetyRiskAssessmentType = {
  "@id"?: BlankNodeOrIRI;
  type?: "ai_SafetyRiskAssessmentType";
  [k: string]: unknown;
} & Ai_SafetyRiskAssessmentTypeProps;
export type Ai_SafetyRiskAssessmentTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type AnnotationType = {
  "@id"?: BlankNodeOrIRI;
  type?: "AnnotationType";
  [k: string]: unknown;
} & AnnotationTypeProps;
export type AnnotationTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type CreationInfo = {
  "@id"?: BlankNodeOrIRI;
  type?: "CreationInfo";
  [k: string]: unknown;
} & CreationInfoProps;
export type CreationInfoProps = SHACLClass & {
  comment?: Prop_CreationInfoComment;
  created: {
    [k: string]: unknown;
  } & Prop_CreationInfoCreated;
  createdBy: [Prop_CreationInfoCreatedBy, ...Prop_CreationInfoCreatedBy[]];
  createdUsing?: Prop_CreationInfoCreatedUsing[];
  specVersion: Prop_CreationInfoSpecVersion;
  [k: string]: unknown;
};
export type Prop_CreationInfoComment = string;
export type Prop_CreationInfoCreated = string;
export type Prop_CreationInfoCreatedBy =
  | (Organization | Person | SoftwareAgent | Agent)
  | "SpdxOrganization"
  | BlankNodeOrIRI;
export type Organization = {
  spdxId: IRI;
  type?: "Organization";
  [k: string]: unknown;
} & OrganizationProps;
export type OrganizationProps = AgentProps & {
  [k: string]: unknown;
};
export type AgentProps = ElementProps & {
  [k: string]: unknown;
};
export type ElementProps = SHACLClass & {
  comment?: Prop_ElementComment;
  creationInfo: CreationInfoDerived;
  description?: Prop_ElementDescription;
  extension?: Prop_ElementExtension[];
  externalIdentifier?: Prop_ElementExternalIdentifier[];
  externalRef?: Prop_ElementExternalRef[];
  name?: Prop_ElementName;
  summary?: Prop_ElementSummary;
  verifiedUsing?: Prop_ElementVerifiedUsing[];
  [k: string]: unknown;
};
export type Prop_ElementComment = string;
export type CreationInfoDerived = CreationInfo | BlankNodeOrIRI;
export type Prop_ElementDescription = string;
export type Prop_ElementExtension = (Extension_CdxPropertiesExtension | Extension_ExtensionProps) | BlankNodeOrIRI;
export type Extension_CdxPropertiesExtension = {
  "@id"?: BlankNodeOrIRI;
  type?: "extension_CdxPropertiesExtension";
  [k: string]: unknown;
} & Extension_CdxPropertiesExtensionProps;
export type Extension_CdxPropertiesExtensionProps = Extension_ExtensionProps & {
  extension_cdxProperty: [Extension_CdxPropertyEntryDerived, ...Extension_CdxPropertyEntryDerived[]];
  [k: string]: unknown;
};
export type Extension_ExtensionProps = SHACLClass & {
  [k: string]: unknown;
};
export type Extension_CdxPropertyEntryDerived = Extension_CdxPropertyEntry | BlankNodeOrIRI;
export type Extension_CdxPropertyEntry = {
  "@id"?: BlankNodeOrIRI;
  type?: "extension_CdxPropertyEntry";
  [k: string]: unknown;
} & Extension_CdxPropertyEntryProps;
export type Extension_CdxPropertyEntryProps = SHACLClass & {
  extension_cdxPropName: PropExtension_CdxPropertyEntryExtensionCdxPropName;
  extension_cdxPropValue?: PropExtension_CdxPropertyEntryExtensionCdxPropValue;
  [k: string]: unknown;
};
export type PropExtension_CdxPropertyEntryExtensionCdxPropName = string;
export type PropExtension_CdxPropertyEntryExtensionCdxPropValue = string;
export type Prop_ElementExternalIdentifier = ExternalIdentifier | BlankNodeOrIRI;
export type ExternalIdentifier = {
  "@id"?: BlankNodeOrIRI;
  type?: "ExternalIdentifier";
  [k: string]: unknown;
} & ExternalIdentifierProps;
export type ExternalIdentifierProps = SHACLClass & {
  comment?: Prop_ExternalIdentifierComment;
  externalIdentifierType: Prop_ExternalIdentifierExternalIdentifierType;
  identifier: Prop_ExternalIdentifierIdentifier;
  identifierLocator?: Prop_ExternalIdentifierIdentifierLocator[];
  issuingAuthority?: Prop_ExternalIdentifierIssuingAuthority;
  [k: string]: unknown;
};
export type Prop_ExternalIdentifierComment = string;
export type Prop_ExternalIdentifierExternalIdentifierType =
  | "cpe22"
  | "cpe23"
  | "cve"
  | "email"
  | "gitoid"
  | "other"
  | "packageUrl"
  | "securityOther"
  | "swhid"
  | "swid"
  | "urlScheme";
export type Prop_ExternalIdentifierIdentifier = string;
export type Prop_ExternalIdentifierIdentifierLocator = string;
export type Prop_ExternalIdentifierIssuingAuthority = string;
export type Prop_ElementExternalRef = ExternalRef | BlankNodeOrIRI;
export type ExternalRef = {
  "@id"?: BlankNodeOrIRI;
  type?: "ExternalRef";
  [k: string]: unknown;
} & ExternalRefProps;
export type ExternalRefProps = SHACLClass & {
  comment?: Prop_ExternalRefComment;
  contentType?: Prop_ExternalRefContentType;
  externalRefType?: Prop_ExternalRefExternalRefType;
  locator?: Prop_ExternalRefLocator[];
  [k: string]: unknown;
};
export type Prop_ExternalRefComment = string;
export type Prop_ExternalRefContentType = string;
export type Prop_ExternalRefExternalRefType =
  | "altDownloadLocation"
  | "altWebPage"
  | "binaryArtifact"
  | "bower"
  | "buildMeta"
  | "buildSystem"
  | "certificationReport"
  | "chat"
  | "componentAnalysisReport"
  | "cwe"
  | "documentation"
  | "dynamicAnalysisReport"
  | "eolNotice"
  | "exportControlAssessment"
  | "funding"
  | "issueTracker"
  | "license"
  | "mailingList"
  | "mavenCentral"
  | "metrics"
  | "npm"
  | "nuget"
  | "other"
  | "privacyAssessment"
  | "productMetadata"
  | "purchaseOrder"
  | "qualityAssessmentReport"
  | "releaseHistory"
  | "releaseNotes"
  | "riskAssessment"
  | "runtimeAnalysisReport"
  | "secureSoftwareAttestation"
  | "securityAdversaryModel"
  | "securityAdvisory"
  | "securityFix"
  | "securityOther"
  | "securityPenTestReport"
  | "securityPolicy"
  | "securityThreatModel"
  | "socialMedia"
  | "sourceArtifact"
  | "staticAnalysisReport"
  | "support"
  | "vcs"
  | "vulnerabilityDisclosureReport"
  | "vulnerabilityExploitabilityAssessment";
export type Prop_ExternalRefLocator = string;
export type Prop_ElementName = string;
export type Prop_ElementSummary = string;
export type Prop_ElementVerifiedUsing = (Hash | PackageVerificationCode | Software_ContentIdentifier) | BlankNodeOrIRI;
export type Hash = {
  "@id"?: BlankNodeOrIRI;
  type?: "Hash";
  [k: string]: unknown;
} & HashProps;
export type HashProps = IntegrityMethodProps & {
  algorithm: Prop_HashAlgorithm;
  hashValue: Prop_HashHashValue;
  [k: string]: unknown;
};
export type IntegrityMethodProps = SHACLClass & {
  comment?: Prop_IntegrityMethodComment;
  [k: string]: unknown;
};
export type Prop_IntegrityMethodComment = string;
export type Prop_HashAlgorithm =
  | "adler32"
  | "blake2b256"
  | "blake2b384"
  | "blake2b512"
  | "blake3"
  | "crystalsDilithium"
  | "crystalsKyber"
  | "falcon"
  | "md2"
  | "md4"
  | "md5"
  | "md6"
  | "other"
  | "sha1"
  | "sha224"
  | "sha256"
  | "sha384"
  | "sha3_224"
  | "sha3_256"
  | "sha3_384"
  | "sha3_512"
  | "sha512";
export type Prop_HashHashValue = string;
export type PackageVerificationCode = {
  "@id"?: BlankNodeOrIRI;
  type?: "PackageVerificationCode";
  [k: string]: unknown;
} & PackageVerificationCodeProps;
export type PackageVerificationCodeProps = IntegrityMethodProps & {
  algorithm: Prop_PackageVerificationCodeAlgorithm;
  hashValue: Prop_PackageVerificationCodeHashValue;
  packageVerificationCodeExcludedFile?: Prop_PackageVerificationCodePackageVerificationCodeExcludedFile[];
  [k: string]: unknown;
};
export type Prop_PackageVerificationCodeAlgorithm =
  | "adler32"
  | "blake2b256"
  | "blake2b384"
  | "blake2b512"
  | "blake3"
  | "crystalsDilithium"
  | "crystalsKyber"
  | "falcon"
  | "md2"
  | "md4"
  | "md5"
  | "md6"
  | "other"
  | "sha1"
  | "sha224"
  | "sha256"
  | "sha384"
  | "sha3_224"
  | "sha3_256"
  | "sha3_384"
  | "sha3_512"
  | "sha512";
export type Prop_PackageVerificationCodeHashValue = string;
export type Prop_PackageVerificationCodePackageVerificationCodeExcludedFile = string;
export type Software_ContentIdentifier = {
  "@id"?: BlankNodeOrIRI;
  type?: "software_ContentIdentifier";
  [k: string]: unknown;
} & Software_ContentIdentifierProps;
export type Software_ContentIdentifierProps = IntegrityMethodProps & {
  software_contentIdentifierType: PropSoftware_ContentIdentifierSoftwareContentIdentifierType;
  software_contentIdentifierValue: Prop_ExternalIdentifierIdentifierLocator;
  [k: string]: unknown;
};
export type PropSoftware_ContentIdentifierSoftwareContentIdentifierType = "gitoid" | "swhid";
export type Person = {
  spdxId: IRI;
  type?: "Person";
  [k: string]: unknown;
} & PersonProps;
export type PersonProps = AgentProps & {
  [k: string]: unknown;
};
export type SoftwareAgent = {
  spdxId: IRI;
  type?: "SoftwareAgent";
  [k: string]: unknown;
} & SoftwareAgentProps;
export type SoftwareAgentProps = AgentProps & {
  [k: string]: unknown;
};
export type Agent = {
  spdxId: IRI;
  type?: "Agent";
  [k: string]: unknown;
} & AgentProps;
export type Prop_CreationInfoCreatedUsing = Tool | BlankNodeOrIRI;
export type Tool = {
  spdxId: IRI;
  type?: "Tool";
  [k: string]: unknown;
} & ToolProps;
export type ToolProps = ElementProps & {
  [k: string]: unknown;
};
export type Prop_CreationInfoSpecVersion = string;
export type DictionaryEntry = {
  "@id"?: BlankNodeOrIRI;
  type?: "DictionaryEntry";
  [k: string]: unknown;
} & DictionaryEntryProps;
export type DictionaryEntryProps = SHACLClass & {
  key: Prop_DictionaryEntryKey;
  value?: Prop_DictionaryEntryValue;
  [k: string]: unknown;
};
export type Prop_DictionaryEntryKey = string;
export type Prop_DictionaryEntryValue = string;
export type ExternalIdentifierType = {
  "@id"?: BlankNodeOrIRI;
  type?: "ExternalIdentifierType";
  [k: string]: unknown;
} & ExternalIdentifierTypeProps;
export type ExternalIdentifierTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type ExternalMap = {
  "@id"?: BlankNodeOrIRI;
  type?: "ExternalMap";
  [k: string]: unknown;
} & ExternalMapProps;
export type ExternalMapProps = SHACLClass & {
  definingArtifact?: Prop_ExternalMapDefiningArtifact;
  externalSpdxId: Prop_ExternalIdentifierIdentifierLocator;
  locationHint?: Prop_ExternalIdentifierIdentifierLocator;
  verifiedUsing?: Prop_ElementVerifiedUsing[];
  [k: string]: unknown;
};
export type Prop_ExternalMapDefiningArtifact =
  | (
      | Ai_AIPackage
      | Dataset_DatasetPackage
      | Security_Vulnerability
      | Software_File
      | Software_Package
      | Software_Snippet
    )
  | BlankNodeOrIRI;
export type Ai_AIPackage = {
  spdxId: IRI;
  type?: "ai_AIPackage";
  [k: string]: unknown;
} & Ai_AIPackageProps;
export type Ai_AIPackageProps = Software_PackageProps & {
  ai_autonomyType?: PropAi_AIPackageAiAutonomyType;
  ai_domain?: PropAi_AIPackageAiDomain[];
  ai_energyConsumption?: Ai_EnergyConsumptionDerived;
  ai_hyperparameter?: DictionaryEntryDerived[];
  ai_informationAboutApplication?: PropAi_AIPackageAiInformationAboutApplication;
  ai_informationAboutTraining?: PropAi_AIPackageAiInformationAboutTraining;
  ai_limitation?: PropAi_AIPackageAiLimitation;
  ai_metric?: DictionaryEntryDerived[];
  ai_metricDecisionThreshold?: DictionaryEntryDerived[];
  ai_modelDataPreprocessing?: PropAi_AIPackageAiModelDataPreprocessing[];
  ai_modelExplainability?: PropAi_AIPackageAiModelExplainability[];
  ai_safetyRiskAssessment?: PropAi_AIPackageAiSafetyRiskAssessment;
  ai_standardCompliance?: PropAi_AIPackageAiStandardCompliance[];
  ai_typeOfModel?: PropAi_AIPackageAiTypeOfModel[];
  ai_useSensitivePersonalInformation?: PropAi_AIPackageAiUseSensitivePersonalInformation;
  [k: string]: unknown;
};
export type Software_PackageProps = Software_SoftwareArtifactProps & {
  software_downloadLocation?: Prop_ExternalIdentifierIdentifierLocator;
  software_homePage?: Prop_ExternalIdentifierIdentifierLocator;
  software_packageUrl?: Prop_ExternalIdentifierIdentifierLocator;
  software_packageVersion?: PropSoftware_PackageSoftwarePackageVersion;
  software_sourceInfo?: PropSoftware_PackageSoftwareSourceInfo;
  [k: string]: unknown;
};
export type Software_SoftwareArtifactProps = ArtifactProps & {
  software_additionalPurpose?: PropSoftware_SoftwareArtifactSoftwareAdditionalPurpose[];
  software_attributionText?: PropSoftware_SoftwareArtifactSoftwareAttributionText[];
  software_contentIdentifier?: Software_ContentIdentifierDerived[];
  software_copyrightText?: PropSoftware_SoftwareArtifactSoftwareCopyrightText;
  software_primaryPurpose?: PropSoftware_SoftwareArtifactSoftwarePrimaryPurpose;
  [k: string]: unknown;
};
export type ArtifactProps = ElementProps & {
  builtTime?: {
    [k: string]: unknown;
  } & Prop_ArtifactBuiltTime;
  originatedBy?: Prop_CreationInfoCreatedBy[];
  releaseTime?: {
    [k: string]: unknown;
  } & Prop_ArtifactReleaseTime;
  standardName?: Prop_ArtifactStandardName[];
  suppliedBy?: Prop_CreationInfoCreatedBy;
  supportLevel?: Prop_ArtifactSupportLevel[];
  validUntilTime?: {
    [k: string]: unknown;
  } & Prop_ArtifactValidUntilTime;
  [k: string]: unknown;
};
export type Prop_ArtifactBuiltTime = string;
export type Prop_ArtifactReleaseTime = string;
export type Prop_ArtifactStandardName = string;
export type Prop_ArtifactSupportLevel =
  | "deployed"
  | "development"
  | "endOfSupport"
  | "limitedSupport"
  | "noAssertion"
  | "noSupport"
  | "support";
export type Prop_ArtifactValidUntilTime = string;
export type PropSoftware_SoftwareArtifactSoftwareAdditionalPurpose =
  | "application"
  | "archive"
  | "bom"
  | "configuration"
  | "container"
  | "data"
  | "device"
  | "deviceDriver"
  | "diskImage"
  | "documentation"
  | "evidence"
  | "executable"
  | "file"
  | "filesystemImage"
  | "firmware"
  | "framework"
  | "install"
  | "library"
  | "manifest"
  | "model"
  | "module"
  | "operatingSystem"
  | "other"
  | "patch"
  | "platform"
  | "requirement"
  | "source"
  | "specification"
  | "test";
export type PropSoftware_SoftwareArtifactSoftwareAttributionText = string;
export type Software_ContentIdentifierDerived = Software_ContentIdentifier | BlankNodeOrIRI;
export type PropSoftware_SoftwareArtifactSoftwareCopyrightText = string;
export type PropSoftware_SoftwareArtifactSoftwarePrimaryPurpose =
  | "application"
  | "archive"
  | "bom"
  | "configuration"
  | "container"
  | "data"
  | "device"
  | "deviceDriver"
  | "diskImage"
  | "documentation"
  | "evidence"
  | "executable"
  | "file"
  | "filesystemImage"
  | "firmware"
  | "framework"
  | "install"
  | "library"
  | "manifest"
  | "model"
  | "module"
  | "operatingSystem"
  | "other"
  | "patch"
  | "platform"
  | "requirement"
  | "source"
  | "specification"
  | "test";
export type PropSoftware_PackageSoftwarePackageVersion = string;
export type PropSoftware_PackageSoftwareSourceInfo = string;
export type PropAi_AIPackageAiAutonomyType = "no" | "noAssertion" | "yes";
export type PropAi_AIPackageAiDomain = string;
export type Ai_EnergyConsumptionDerived = Ai_EnergyConsumption | BlankNodeOrIRI;
export type DictionaryEntryDerived = DictionaryEntry | BlankNodeOrIRI;
export type PropAi_AIPackageAiInformationAboutApplication = string;
export type PropAi_AIPackageAiInformationAboutTraining = string;
export type PropAi_AIPackageAiLimitation = string;
export type PropAi_AIPackageAiModelDataPreprocessing = string;
export type PropAi_AIPackageAiModelExplainability = string;
export type PropAi_AIPackageAiSafetyRiskAssessment = "high" | "low" | "medium" | "serious";
export type PropAi_AIPackageAiStandardCompliance = string;
export type PropAi_AIPackageAiTypeOfModel = string;
export type PropAi_AIPackageAiUseSensitivePersonalInformation = "no" | "noAssertion" | "yes";
export type Dataset_DatasetPackage = {
  spdxId: IRI;
  type?: "dataset_DatasetPackage";
  [k: string]: unknown;
} & Dataset_DatasetPackageProps;
export type Dataset_DatasetPackageProps = Software_PackageProps & {
  dataset_anonymizationMethodUsed?: PropDataset_DatasetPackageDatasetAnonymizationMethodUsed[];
  dataset_confidentialityLevel?: PropDataset_DatasetPackageDatasetConfidentialityLevel;
  dataset_dataCollectionProcess?: PropDataset_DatasetPackageDatasetDataCollectionProcess;
  dataset_dataPreprocessing?: PropDataset_DatasetPackageDatasetDataPreprocessing[];
  dataset_datasetAvailability?: PropDataset_DatasetPackageDatasetDatasetAvailability;
  dataset_datasetNoise?: PropDataset_DatasetPackageDatasetDatasetNoise;
  dataset_datasetSize?: PropDataset_DatasetPackageDatasetDatasetSize;
  dataset_datasetType: [
    PropDataset_DatasetPackageDatasetDatasetType,
    ...PropDataset_DatasetPackageDatasetDatasetType[]
  ];
  dataset_datasetUpdateMechanism?: PropDataset_DatasetPackageDatasetDatasetUpdateMechanism;
  dataset_hasSensitivePersonalInformation?: PropDataset_DatasetPackageDatasetHasSensitivePersonalInformation;
  dataset_intendedUse?: PropDataset_DatasetPackageDatasetIntendedUse;
  dataset_knownBias?: PropDataset_DatasetPackageDatasetKnownBias[];
  dataset_sensor?: DictionaryEntryDerived[];
  [k: string]: unknown;
};
export type PropDataset_DatasetPackageDatasetAnonymizationMethodUsed = string;
export type PropDataset_DatasetPackageDatasetConfidentialityLevel = "amber" | "clear" | "green" | "red";
export type PropDataset_DatasetPackageDatasetDataCollectionProcess = string;
export type PropDataset_DatasetPackageDatasetDataPreprocessing = string;
export type PropDataset_DatasetPackageDatasetDatasetAvailability =
  | "clickthrough"
  | "directDownload"
  | "query"
  | "registration"
  | "scrapingScript";
export type PropDataset_DatasetPackageDatasetDatasetNoise = string;
export type PropDataset_DatasetPackageDatasetDatasetSize = number;
export type PropDataset_DatasetPackageDatasetDatasetType =
  | "audio"
  | "categorical"
  | "graph"
  | "image"
  | "noAssertion"
  | "numeric"
  | "other"
  | "sensor"
  | "structured"
  | "syntactic"
  | "text"
  | "timeseries"
  | "timestamp"
  | "video";
export type PropDataset_DatasetPackageDatasetDatasetUpdateMechanism = string;
export type PropDataset_DatasetPackageDatasetHasSensitivePersonalInformation = "no" | "noAssertion" | "yes";
export type PropDataset_DatasetPackageDatasetIntendedUse = string;
export type PropDataset_DatasetPackageDatasetKnownBias = string;
export type Security_Vulnerability = {
  spdxId: IRI;
  type?: "security_Vulnerability";
  [k: string]: unknown;
} & Security_VulnerabilityProps;
export type Security_VulnerabilityProps = ArtifactProps & {
  security_modifiedTime?: {
    [k: string]: unknown;
  } & PropSecurity_VulnerabilitySecurityModifiedTime;
  security_publishedTime?: {
    [k: string]: unknown;
  } & PropSecurity_VulnerabilitySecurityPublishedTime;
  security_withdrawnTime?: {
    [k: string]: unknown;
  } & PropSecurity_VulnerabilitySecurityWithdrawnTime;
  [k: string]: unknown;
};
export type PropSecurity_VulnerabilitySecurityModifiedTime = string;
export type PropSecurity_VulnerabilitySecurityPublishedTime = string;
export type PropSecurity_VulnerabilitySecurityWithdrawnTime = string;
export type Software_File = {
  spdxId: IRI;
  type?: "software_File";
  [k: string]: unknown;
} & Software_FileProps;
export type Software_FileProps = Software_SoftwareArtifactProps & {
  contentType?: PropSoftware_FileContentType;
  software_fileKind?: PropSoftware_FileSoftwareFileKind;
  [k: string]: unknown;
};
export type PropSoftware_FileContentType = string;
export type PropSoftware_FileSoftwareFileKind = "directory" | "file";
export type Software_Package = {
  spdxId: IRI;
  type?: "software_Package";
  [k: string]: unknown;
} & Software_PackageProps;
export type Software_Snippet = {
  spdxId: IRI;
  type?: "software_Snippet";
  [k: string]: unknown;
} & Software_SnippetProps;
export type Software_SnippetProps = Software_SoftwareArtifactProps & {
  software_byteRange?: PositiveIntegerRangeDerived;
  software_lineRange?: PositiveIntegerRangeDerived;
  software_snippetFromFile: Software_FileDerived;
  [k: string]: unknown;
};
export type PositiveIntegerRangeDerived = PositiveIntegerRange | BlankNodeOrIRI;
export type PositiveIntegerRange = {
  "@id"?: BlankNodeOrIRI;
  type?: "PositiveIntegerRange";
  [k: string]: unknown;
} & PositiveIntegerRangeProps;
export type PositiveIntegerRangeProps = SHACLClass & {
  beginIntegerRange: Prop_PositiveIntegerRangeBeginIntegerRange;
  endIntegerRange: Prop_PositiveIntegerRangeEndIntegerRange;
  [k: string]: unknown;
};
export type Prop_PositiveIntegerRangeBeginIntegerRange = number;
export type Prop_PositiveIntegerRangeEndIntegerRange = number;
export type Software_FileDerived = Software_File | BlankNodeOrIRI;
export type ExternalRefType = {
  "@id"?: BlankNodeOrIRI;
  type?: "ExternalRefType";
  [k: string]: unknown;
} & ExternalRefTypeProps;
export type ExternalRefTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type HashAlgorithm = {
  "@id"?: BlankNodeOrIRI;
  type?: "HashAlgorithm";
  [k: string]: unknown;
} & HashAlgorithmProps;
export type HashAlgorithmProps = SHACLClass & {
  [k: string]: unknown;
};
export type IndividualElement = {
  spdxId: IRI;
  type?: "IndividualElement";
  [k: string]: unknown;
} & IndividualElementProps;
export type IndividualElementProps = ElementProps & {
  [k: string]: unknown;
};
export type LifecycleScopeType = {
  "@id"?: BlankNodeOrIRI;
  type?: "LifecycleScopeType";
  [k: string]: unknown;
} & LifecycleScopeTypeProps;
export type LifecycleScopeTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type NamespaceMap = {
  "@id"?: BlankNodeOrIRI;
  type?: "NamespaceMap";
  [k: string]: unknown;
} & NamespaceMapProps;
export type NamespaceMapProps = SHACLClass & {
  namespace: Prop_ExternalIdentifierIdentifierLocator;
  prefix: Prop_NamespaceMapPrefix;
  [k: string]: unknown;
};
export type Prop_NamespaceMapPrefix = string;
export type PresenceType = {
  "@id"?: BlankNodeOrIRI;
  type?: "PresenceType";
  [k: string]: unknown;
} & PresenceTypeProps;
export type PresenceTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type ProfileIdentifierType = {
  "@id"?: BlankNodeOrIRI;
  type?: "ProfileIdentifierType";
  [k: string]: unknown;
} & ProfileIdentifierTypeProps;
export type ProfileIdentifierTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type Relationship = {
  spdxId: IRI;
  type?: "Relationship";
  [k: string]: unknown;
} & RelationshipProps;
export type RelationshipProps = ElementProps & {
  completeness?: Prop_RelationshipCompleteness;
  endTime?: {
    [k: string]: unknown;
  } & Prop_RelationshipEndTime;
  from: ElementDerived;
  relationshipType: Prop_RelationshipRelationshipType;
  startTime?: {
    [k: string]: unknown;
  } & {
    [k: string]: unknown;
  } & Prop_RelationshipStartTime;
  to: [ElementDerived, ...ElementDerived[]];
  [k: string]: unknown;
};
export type Prop_RelationshipCompleteness = "complete" | "incomplete" | "noAssertion";
export type Prop_RelationshipEndTime = string;
export type ElementDerived =
  | (
      | Ai_AIPackage
      | Build_Build
      | Agent
      | Annotation
      | Bom
      | Bundle
      | IndividualElement
      | LifecycleScopedRelationship
      | Organization
      | Person
      | Relationship
      | SoftwareAgent
      | SpdxDocument
      | Tool
      | Dataset_DatasetPackage
      | Expandedlicensing_ConjunctiveLicenseSet
      | Expandedlicensing_CustomLicense
      | Expandedlicensing_CustomLicenseAddition
      | Expandedlicensing_DisjunctiveLicenseSet
      | Expandedlicensing_IndividualLicensingInfo
      | Expandedlicensing_ListedLicense
      | Expandedlicensing_ListedLicenseException
      | Expandedlicensing_OrLaterOperator
      | Expandedlicensing_WithAdditionOperator
      | Security_CvssV2VulnAssessmentRelationship
      | Security_CvssV3VulnAssessmentRelationship
      | Security_CvssV4VulnAssessmentRelationship
      | Security_EpssVulnAssessmentRelationship
      | Security_ExploitCatalogVulnAssessmentRelationship
      | Security_SsvcVulnAssessmentRelationship
      | Security_VexAffectedVulnAssessmentRelationship
      | Security_VexFixedVulnAssessmentRelationship
      | Security_VexNotAffectedVulnAssessmentRelationship
      | Security_VexUnderInvestigationVulnAssessmentRelationship
      | Security_Vulnerability
      | Simplelicensing_LicenseExpression
      | Simplelicensing_SimpleLicensingText
      | Software_File
      | Software_Package
      | Software_Sbom
      | Software_Snippet
    )
  | "NoAssertionElement"
  | "NoneElement"
  | "SpdxOrganization"
  | "expandedlicensing_NoAssertionLicense"
  | "expandedlicensing_NoneLicense"
  | BlankNodeOrIRI;
export type Build_Build = {
  spdxId: IRI;
  type?: "build_Build";
  [k: string]: unknown;
} & Build_BuildProps;
export type Build_BuildProps = ElementProps & {
  build_buildEndTime?: {
    [k: string]: unknown;
  } & PropBuild_BuildBuildBuildEndTime;
  build_buildId?: PropBuild_BuildBuildBuildId;
  build_buildStartTime?: {
    [k: string]: unknown;
  } & PropBuild_BuildBuildBuildStartTime;
  build_buildType: Prop_ExternalIdentifierIdentifierLocator;
  build_configSourceDigest?: PropBuild_BuildBuildConfigSourceDigest[];
  build_configSourceEntrypoint?: PropBuild_BuildBuildConfigSourceEntrypoint[];
  build_configSourceUri?: Prop_ExternalIdentifierIdentifierLocator[];
  build_environment?: DictionaryEntryDerived[];
  build_parameter?: DictionaryEntryDerived[];
  [k: string]: unknown;
};
export type PropBuild_BuildBuildBuildEndTime = string;
export type PropBuild_BuildBuildBuildId = string;
export type PropBuild_BuildBuildBuildStartTime = string;
export type PropBuild_BuildBuildConfigSourceDigest = Hash | BlankNodeOrIRI;
export type PropBuild_BuildBuildConfigSourceEntrypoint = string;
export type Annotation = {
  spdxId: IRI;
  type?: "Annotation";
  [k: string]: unknown;
} & AnnotationProps;
export type AnnotationProps = ElementProps & {
  annotationType: Prop_AnnotationAnnotationType;
  contentType?: Prop_AnnotationContentType;
  statement?: Prop_AnnotationStatement;
  subject: ElementDerived;
  [k: string]: unknown;
};
export type Prop_AnnotationAnnotationType = "other" | "review";
export type Prop_AnnotationContentType = string;
export type Prop_AnnotationStatement = string;
export type Bom = {
  spdxId: IRI;
  type?: "Bom";
  [k: string]: unknown;
} & BomProps;
export type BomProps = BundleProps & {
  [k: string]: unknown;
};
export type BundleProps = ElementCollectionProps & {
  context?: Prop_BundleContext;
  [k: string]: unknown;
};
export type ElementCollectionProps = ElementProps & {
  element?: ElementDerived[];
  profileConformance?: Prop_ElementCollectionProfileConformance[];
  rootElement?: ElementDerived[];
  [k: string]: unknown;
};
export type Prop_ElementCollectionProfileConformance =
  | "ai"
  | "build"
  | "core"
  | "dataset"
  | "expandedLicensing"
  | "extension"
  | "lite"
  | "security"
  | "simpleLicensing"
  | "software";
export type Prop_BundleContext = string;
export type Bundle = {
  spdxId: IRI;
  type?: "Bundle";
  [k: string]: unknown;
} & BundleProps;
export type LifecycleScopedRelationship = {
  spdxId: IRI;
  type?: "LifecycleScopedRelationship";
  [k: string]: unknown;
} & LifecycleScopedRelationshipProps;
export type LifecycleScopedRelationshipProps = RelationshipProps & {
  scope?: Prop_LifecycleScopedRelationshipScope;
  [k: string]: unknown;
};
export type Prop_LifecycleScopedRelationshipScope = "build" | "design" | "development" | "other" | "runtime" | "test";
export type SpdxDocument = {
  spdxId: IRI;
  type?: "SpdxDocument";
  [k: string]: unknown;
} & SpdxDocumentProps;
export type SpdxDocumentProps = ElementCollectionProps & {
  dataLicense?: Prop_SpdxDocumentDataLicense;
  import?: ExternalMapDerived[];
  namespaceMap?: NamespaceMapDerived[];
  [k: string]: unknown;
};
export type Prop_SpdxDocumentDataLicense =
  | (
      | Expandedlicensing_ConjunctiveLicenseSet
      | Expandedlicensing_CustomLicense
      | Expandedlicensing_DisjunctiveLicenseSet
      | Expandedlicensing_IndividualLicensingInfo
      | Expandedlicensing_ListedLicense
      | Expandedlicensing_OrLaterOperator
      | Expandedlicensing_WithAdditionOperator
      | Simplelicensing_LicenseExpression
    )
  | "expandedlicensing_NoAssertionLicense"
  | "expandedlicensing_NoneLicense"
  | BlankNodeOrIRI;
export type Expandedlicensing_ConjunctiveLicenseSet = {
  spdxId: IRI;
  type?: "expandedlicensing_ConjunctiveLicenseSet";
  [k: string]: unknown;
} & Expandedlicensing_ConjunctiveLicenseSetProps;
export type Expandedlicensing_ConjunctiveLicenseSetProps = Simplelicensing_AnyLicenseInfoProps & {
  expandedlicensing_member: [
    Prop_SpdxDocumentDataLicense,
    Prop_SpdxDocumentDataLicense,
    ...Prop_SpdxDocumentDataLicense[]
  ];
  [k: string]: unknown;
};
export type Simplelicensing_AnyLicenseInfoProps = ElementProps & {
  [k: string]: unknown;
};
export type Expandedlicensing_CustomLicense = {
  spdxId: IRI;
  type?: "expandedlicensing_CustomLicense";
  [k: string]: unknown;
} & Expandedlicensing_CustomLicenseProps;
export type Expandedlicensing_CustomLicenseProps = Expandedlicensing_LicenseProps & {
  [k: string]: unknown;
};
export type Expandedlicensing_LicenseProps = Expandedlicensing_ExtendableLicenseProps & {
  expandedlicensing_isDeprecatedLicenseId?: PropExpandedlicensing_LicenseExpandedlicensingIsDeprecatedLicenseId;
  expandedlicensing_isFsfLibre?: PropExpandedlicensing_LicenseExpandedlicensingIsFsfLibre;
  expandedlicensing_isOsiApproved?: PropExpandedlicensing_LicenseExpandedlicensingIsOsiApproved;
  expandedlicensing_licenseXml?: PropExpandedlicensing_LicenseExpandedlicensingLicenseXml;
  expandedlicensing_obsoletedBy?: PropExpandedlicensing_LicenseExpandedlicensingObsoletedBy;
  expandedlicensing_seeAlso?: Prop_ExternalIdentifierIdentifierLocator[];
  expandedlicensing_standardLicenseHeader?: PropExpandedlicensing_LicenseExpandedlicensingStandardLicenseHeader;
  expandedlicensing_standardLicenseTemplate?: PropExpandedlicensing_LicenseExpandedlicensingStandardLicenseTemplate;
  simplelicensing_licenseText: PropExpandedlicensing_LicenseSimplelicensingLicenseText;
  [k: string]: unknown;
};
export type Expandedlicensing_ExtendableLicenseProps = Simplelicensing_AnyLicenseInfoProps & {
  [k: string]: unknown;
};
export type PropExpandedlicensing_LicenseExpandedlicensingIsDeprecatedLicenseId = boolean;
export type PropExpandedlicensing_LicenseExpandedlicensingIsFsfLibre = boolean;
export type PropExpandedlicensing_LicenseExpandedlicensingIsOsiApproved = boolean;
export type PropExpandedlicensing_LicenseExpandedlicensingLicenseXml = string;
export type PropExpandedlicensing_LicenseExpandedlicensingObsoletedBy = string;
export type PropExpandedlicensing_LicenseExpandedlicensingStandardLicenseHeader = string;
export type PropExpandedlicensing_LicenseExpandedlicensingStandardLicenseTemplate = string;
export type PropExpandedlicensing_LicenseSimplelicensingLicenseText = string;
export type Expandedlicensing_DisjunctiveLicenseSet = {
  spdxId: IRI;
  type?: "expandedlicensing_DisjunctiveLicenseSet";
  [k: string]: unknown;
} & Expandedlicensing_DisjunctiveLicenseSetProps;
export type Expandedlicensing_DisjunctiveLicenseSetProps = Simplelicensing_AnyLicenseInfoProps & {
  expandedlicensing_member: [
    Prop_SpdxDocumentDataLicense,
    Prop_SpdxDocumentDataLicense,
    ...Prop_SpdxDocumentDataLicense[]
  ];
  [k: string]: unknown;
};
export type Expandedlicensing_IndividualLicensingInfo = {
  spdxId: IRI;
  type?: "expandedlicensing_IndividualLicensingInfo";
  [k: string]: unknown;
} & Expandedlicensing_IndividualLicensingInfoProps;
export type Expandedlicensing_IndividualLicensingInfoProps = Simplelicensing_AnyLicenseInfoProps & {
  [k: string]: unknown;
};
export type Expandedlicensing_ListedLicense = {
  spdxId: IRI;
  type?: "expandedlicensing_ListedLicense";
  [k: string]: unknown;
} & Expandedlicensing_ListedLicenseProps;
export type Expandedlicensing_ListedLicenseProps = Expandedlicensing_LicenseProps & {
  expandedlicensing_deprecatedVersion?: PropExpandedlicensing_ListedLicenseExpandedlicensingDeprecatedVersion;
  expandedlicensing_listVersionAdded?: PropExpandedlicensing_ListedLicenseExpandedlicensingListVersionAdded;
  [k: string]: unknown;
};
export type PropExpandedlicensing_ListedLicenseExpandedlicensingDeprecatedVersion = string;
export type PropExpandedlicensing_ListedLicenseExpandedlicensingListVersionAdded = string;
export type Expandedlicensing_OrLaterOperator = {
  spdxId: IRI;
  type?: "expandedlicensing_OrLaterOperator";
  [k: string]: unknown;
} & Expandedlicensing_OrLaterOperatorProps;
export type Expandedlicensing_OrLaterOperatorProps = Expandedlicensing_ExtendableLicenseProps & {
  expandedlicensing_subjectLicense: Expandedlicensing_LicenseDerived;
  [k: string]: unknown;
};
export type Expandedlicensing_LicenseDerived =
  | (Expandedlicensing_CustomLicense | Expandedlicensing_ListedLicense)
  | BlankNodeOrIRI;
export type Expandedlicensing_WithAdditionOperator = {
  spdxId: IRI;
  type?: "expandedlicensing_WithAdditionOperator";
  [k: string]: unknown;
} & Expandedlicensing_WithAdditionOperatorProps;
export type Expandedlicensing_WithAdditionOperatorProps = Simplelicensing_AnyLicenseInfoProps & {
  expandedlicensing_subjectAddition: Expandedlicensing_LicenseAdditionDerived;
  expandedlicensing_subjectExtendableLicense: Expandedlicensing_ExtendableLicenseDerived;
  [k: string]: unknown;
};
export type Expandedlicensing_LicenseAdditionDerived =
  | (Expandedlicensing_CustomLicenseAddition | Expandedlicensing_ListedLicenseException)
  | BlankNodeOrIRI;
export type Expandedlicensing_CustomLicenseAddition = {
  spdxId: IRI;
  type?: "expandedlicensing_CustomLicenseAddition";
  [k: string]: unknown;
} & Expandedlicensing_CustomLicenseAdditionProps;
export type Expandedlicensing_CustomLicenseAdditionProps = Expandedlicensing_LicenseAdditionProps & {
  [k: string]: unknown;
};
export type Expandedlicensing_LicenseAdditionProps = ElementProps & {
  expandedlicensing_additionText: PropExpandedlicensing_LicenseAdditionExpandedlicensingAdditionText;
  expandedlicensing_isDeprecatedAdditionId?: PropExpandedlicensing_LicenseAdditionExpandedlicensingIsDeprecatedAdditionId;
  expandedlicensing_licenseXml?: PropExpandedlicensing_LicenseAdditionExpandedlicensingLicenseXml;
  expandedlicensing_obsoletedBy?: PropExpandedlicensing_LicenseAdditionExpandedlicensingObsoletedBy;
  expandedlicensing_seeAlso?: Prop_ExternalIdentifierIdentifierLocator[];
  expandedlicensing_standardAdditionTemplate?: PropExpandedlicensing_LicenseAdditionExpandedlicensingStandardAdditionTemplate;
  [k: string]: unknown;
};
export type PropExpandedlicensing_LicenseAdditionExpandedlicensingAdditionText = string;
export type PropExpandedlicensing_LicenseAdditionExpandedlicensingIsDeprecatedAdditionId = boolean;
export type PropExpandedlicensing_LicenseAdditionExpandedlicensingLicenseXml = string;
export type PropExpandedlicensing_LicenseAdditionExpandedlicensingObsoletedBy = string;
export type PropExpandedlicensing_LicenseAdditionExpandedlicensingStandardAdditionTemplate = string;
export type Expandedlicensing_ListedLicenseException = {
  spdxId: IRI;
  type?: "expandedlicensing_ListedLicenseException";
  [k: string]: unknown;
} & Expandedlicensing_ListedLicenseExceptionProps;
export type Expandedlicensing_ListedLicenseExceptionProps = Expandedlicensing_LicenseAdditionProps & {
  expandedlicensing_deprecatedVersion?: PropExpandedlicensing_ListedLicenseExceptionExpandedlicensingDeprecatedVersion;
  expandedlicensing_listVersionAdded?: PropExpandedlicensing_ListedLicenseExceptionExpandedlicensingListVersionAdded;
  [k: string]: unknown;
};
export type PropExpandedlicensing_ListedLicenseExceptionExpandedlicensingDeprecatedVersion = string;
export type PropExpandedlicensing_ListedLicenseExceptionExpandedlicensingListVersionAdded = string;
export type Expandedlicensing_ExtendableLicenseDerived =
  | (Expandedlicensing_CustomLicense | Expandedlicensing_ListedLicense | Expandedlicensing_OrLaterOperator)
  | BlankNodeOrIRI;
export type Simplelicensing_LicenseExpression = {
  spdxId: IRI;
  type?: "simplelicensing_LicenseExpression";
  [k: string]: unknown;
} & Simplelicensing_LicenseExpressionProps;
export type Simplelicensing_LicenseExpressionProps = Simplelicensing_AnyLicenseInfoProps & {
  simplelicensing_customIdToUri?: DictionaryEntryDerived[];
  simplelicensing_licenseExpression: PropSimplelicensing_LicenseExpressionSimplelicensingLicenseExpression;
  simplelicensing_licenseListVersion?: PropSimplelicensing_LicenseExpressionSimplelicensingLicenseListVersion;
  [k: string]: unknown;
};
export type PropSimplelicensing_LicenseExpressionSimplelicensingLicenseExpression = string;
export type PropSimplelicensing_LicenseExpressionSimplelicensingLicenseListVersion = string;
export type ExternalMapDerived = ExternalMap | BlankNodeOrIRI;
export type NamespaceMapDerived = NamespaceMap | BlankNodeOrIRI;
export type Security_CvssV2VulnAssessmentRelationship = {
  spdxId: IRI;
  type?: "security_CvssV2VulnAssessmentRelationship";
  [k: string]: unknown;
} & Security_CvssV2VulnAssessmentRelationshipProps;
export type Security_CvssV2VulnAssessmentRelationshipProps = Security_VulnAssessmentRelationshipProps & {
  security_score: PropSecurity_CvssV2VulnAssessmentRelationshipSecurityScore;
  security_vectorString: PropSecurity_CvssV2VulnAssessmentRelationshipSecurityVectorString;
  [k: string]: unknown;
};
export type Security_VulnAssessmentRelationshipProps = RelationshipProps & {
  suppliedBy?: Prop_CreationInfoCreatedBy;
  security_assessedElement?: PropSecurity_VulnAssessmentRelationshipSecurityAssessedElement;
  security_modifiedTime?: {
    [k: string]: unknown;
  } & PropSecurity_VulnAssessmentRelationshipSecurityModifiedTime;
  security_publishedTime?: {
    [k: string]: unknown;
  } & PropSecurity_VulnAssessmentRelationshipSecurityPublishedTime;
  security_withdrawnTime?: {
    [k: string]: unknown;
  } & PropSecurity_VulnAssessmentRelationshipSecurityWithdrawnTime;
  [k: string]: unknown;
};
export type PropSecurity_VulnAssessmentRelationshipSecurityAssessedElement =
  | (Ai_AIPackage | Dataset_DatasetPackage | Software_File | Software_Package | Software_Snippet)
  | BlankNodeOrIRI;
export type PropSecurity_VulnAssessmentRelationshipSecurityModifiedTime = string;
export type PropSecurity_VulnAssessmentRelationshipSecurityPublishedTime = string;
export type PropSecurity_VulnAssessmentRelationshipSecurityWithdrawnTime = string;
export type PropSecurity_CvssV2VulnAssessmentRelationshipSecurityScore = number | string;
export type PropSecurity_CvssV2VulnAssessmentRelationshipSecurityVectorString = string;
export type Security_CvssV3VulnAssessmentRelationship = {
  spdxId: IRI;
  type?: "security_CvssV3VulnAssessmentRelationship";
  [k: string]: unknown;
} & Security_CvssV3VulnAssessmentRelationshipProps;
export type Security_CvssV3VulnAssessmentRelationshipProps = Security_VulnAssessmentRelationshipProps & {
  security_score: PropSecurity_CvssV3VulnAssessmentRelationshipSecurityScore;
  security_severity: PropSecurity_CvssV3VulnAssessmentRelationshipSecuritySeverity;
  security_vectorString: PropSecurity_CvssV3VulnAssessmentRelationshipSecurityVectorString;
  [k: string]: unknown;
};
export type PropSecurity_CvssV3VulnAssessmentRelationshipSecurityScore = number | string;
export type PropSecurity_CvssV3VulnAssessmentRelationshipSecuritySeverity =
  | "critical"
  | "high"
  | "low"
  | "medium"
  | "none";
export type PropSecurity_CvssV3VulnAssessmentRelationshipSecurityVectorString = string;
export type Security_CvssV4VulnAssessmentRelationship = {
  spdxId: IRI;
  type?: "security_CvssV4VulnAssessmentRelationship";
  [k: string]: unknown;
} & Security_CvssV4VulnAssessmentRelationshipProps;
export type Security_CvssV4VulnAssessmentRelationshipProps = Security_VulnAssessmentRelationshipProps & {
  security_score: PropSecurity_CvssV4VulnAssessmentRelationshipSecurityScore;
  security_severity: PropSecurity_CvssV4VulnAssessmentRelationshipSecuritySeverity;
  security_vectorString: PropSecurity_CvssV4VulnAssessmentRelationshipSecurityVectorString;
  [k: string]: unknown;
};
export type PropSecurity_CvssV4VulnAssessmentRelationshipSecurityScore = number | string;
export type PropSecurity_CvssV4VulnAssessmentRelationshipSecuritySeverity =
  | "critical"
  | "high"
  | "low"
  | "medium"
  | "none";
export type PropSecurity_CvssV4VulnAssessmentRelationshipSecurityVectorString = string;
export type Security_EpssVulnAssessmentRelationship = {
  spdxId: IRI;
  type?: "security_EpssVulnAssessmentRelationship";
  [k: string]: unknown;
} & Security_EpssVulnAssessmentRelationshipProps;
export type Security_EpssVulnAssessmentRelationshipProps = Security_VulnAssessmentRelationshipProps & {
  security_percentile: PropSecurity_EpssVulnAssessmentRelationshipSecurityPercentile;
  security_probability: PropSecurity_EpssVulnAssessmentRelationshipSecurityProbability;
  [k: string]: unknown;
};
export type PropSecurity_EpssVulnAssessmentRelationshipSecurityPercentile = number | string;
export type PropSecurity_EpssVulnAssessmentRelationshipSecurityProbability = number | string;
export type Security_ExploitCatalogVulnAssessmentRelationship = {
  spdxId: IRI;
  type?: "security_ExploitCatalogVulnAssessmentRelationship";
  [k: string]: unknown;
} & Security_ExploitCatalogVulnAssessmentRelationshipProps;
export type Security_ExploitCatalogVulnAssessmentRelationshipProps = Security_VulnAssessmentRelationshipProps & {
  security_catalogType: PropSecurity_ExploitCatalogVulnAssessmentRelationshipSecurityCatalogType;
  security_exploited: PropSecurity_ExploitCatalogVulnAssessmentRelationshipSecurityExploited;
  security_locator: Prop_ExternalIdentifierIdentifierLocator;
  [k: string]: unknown;
};
export type PropSecurity_ExploitCatalogVulnAssessmentRelationshipSecurityCatalogType = "kev" | "other";
export type PropSecurity_ExploitCatalogVulnAssessmentRelationshipSecurityExploited = boolean;
export type Security_SsvcVulnAssessmentRelationship = {
  spdxId: IRI;
  type?: "security_SsvcVulnAssessmentRelationship";
  [k: string]: unknown;
} & Security_SsvcVulnAssessmentRelationshipProps;
export type Security_SsvcVulnAssessmentRelationshipProps = Security_VulnAssessmentRelationshipProps & {
  security_decisionType: PropSecurity_SsvcVulnAssessmentRelationshipSecurityDecisionType;
  [k: string]: unknown;
};
export type PropSecurity_SsvcVulnAssessmentRelationshipSecurityDecisionType = "act" | "attend" | "track" | "trackStar";
export type Security_VexAffectedVulnAssessmentRelationship = {
  spdxId: IRI;
  type?: "security_VexAffectedVulnAssessmentRelationship";
  [k: string]: unknown;
} & Security_VexAffectedVulnAssessmentRelationshipProps;
export type Security_VexAffectedVulnAssessmentRelationshipProps = Security_VexVulnAssessmentRelationshipProps & {
  security_actionStatement: PropSecurity_VexAffectedVulnAssessmentRelationshipSecurityActionStatement;
  security_actionStatementTime?: {
    [k: string]: unknown;
  } & PropSecurity_VexAffectedVulnAssessmentRelationshipSecurityActionStatementTime;
  [k: string]: unknown;
};
export type Security_VexVulnAssessmentRelationshipProps = Security_VulnAssessmentRelationshipProps & {
  security_statusNotes?: PropSecurity_VexVulnAssessmentRelationshipSecurityStatusNotes;
  security_vexVersion?: PropSecurity_VexVulnAssessmentRelationshipSecurityVexVersion;
  [k: string]: unknown;
};
export type PropSecurity_VexVulnAssessmentRelationshipSecurityStatusNotes = string;
export type PropSecurity_VexVulnAssessmentRelationshipSecurityVexVersion = string;
export type PropSecurity_VexAffectedVulnAssessmentRelationshipSecurityActionStatement = string;
export type PropSecurity_VexAffectedVulnAssessmentRelationshipSecurityActionStatementTime = string;
export type Security_VexFixedVulnAssessmentRelationship = {
  spdxId: IRI;
  type?: "security_VexFixedVulnAssessmentRelationship";
  [k: string]: unknown;
} & Security_VexFixedVulnAssessmentRelationshipProps;
export type Security_VexFixedVulnAssessmentRelationshipProps = Security_VexVulnAssessmentRelationshipProps & {
  [k: string]: unknown;
};
export type Security_VexNotAffectedVulnAssessmentRelationship = {
  spdxId: IRI;
  type?: "security_VexNotAffectedVulnAssessmentRelationship";
  [k: string]: unknown;
} & Security_VexNotAffectedVulnAssessmentRelationshipProps;
export type Security_VexNotAffectedVulnAssessmentRelationshipProps = Security_VexVulnAssessmentRelationshipProps & {
  security_impactStatement?: PropSecurity_VexNotAffectedVulnAssessmentRelationshipSecurityImpactStatement;
  security_impactStatementTime?: {
    [k: string]: unknown;
  } & PropSecurity_VexNotAffectedVulnAssessmentRelationshipSecurityImpactStatementTime;
  security_justificationType?: PropSecurity_VexNotAffectedVulnAssessmentRelationshipSecurityJustificationType;
  [k: string]: unknown;
};
export type PropSecurity_VexNotAffectedVulnAssessmentRelationshipSecurityImpactStatement = string;
export type PropSecurity_VexNotAffectedVulnAssessmentRelationshipSecurityImpactStatementTime = string;
export type PropSecurity_VexNotAffectedVulnAssessmentRelationshipSecurityJustificationType =
  | "componentNotPresent"
  | "inlineMitigationsAlreadyExist"
  | "vulnerableCodeCannotBeControlledByAdversary"
  | "vulnerableCodeNotInExecutePath"
  | "vulnerableCodeNotPresent";
export type Security_VexUnderInvestigationVulnAssessmentRelationship = {
  spdxId: IRI;
  type?: "security_VexUnderInvestigationVulnAssessmentRelationship";
  [k: string]: unknown;
} & Security_VexUnderInvestigationVulnAssessmentRelationshipProps;
export type Security_VexUnderInvestigationVulnAssessmentRelationshipProps =
  Security_VexVulnAssessmentRelationshipProps & {
    [k: string]: unknown;
  };
export type Simplelicensing_SimpleLicensingText = {
  spdxId: IRI;
  type?: "simplelicensing_SimpleLicensingText";
  [k: string]: unknown;
} & Simplelicensing_SimpleLicensingTextProps;
export type Simplelicensing_SimpleLicensingTextProps = ElementProps & {
  simplelicensing_licenseText: PropSimplelicensing_SimpleLicensingTextSimplelicensingLicenseText;
  [k: string]: unknown;
};
export type PropSimplelicensing_SimpleLicensingTextSimplelicensingLicenseText = string;
export type Software_Sbom = {
  spdxId: IRI;
  type?: "software_Sbom";
  [k: string]: unknown;
} & Software_SbomProps;
export type Software_SbomProps = BomProps & {
  software_sbomType?: PropSoftware_SbomSoftwareSbomType[];
  [k: string]: unknown;
};
export type PropSoftware_SbomSoftwareSbomType = "analyzed" | "build" | "deployed" | "design" | "runtime" | "source";
export type Prop_RelationshipRelationshipType =
  | "affects"
  | "amendedBy"
  | "ancestorOf"
  | "availableFrom"
  | "configures"
  | "contains"
  | "coordinatedBy"
  | "copiedTo"
  | "delegatedTo"
  | "dependsOn"
  | "descendantOf"
  | "describes"
  | "doesNotAffect"
  | "expandsTo"
  | "exploitCreatedBy"
  | "fixedBy"
  | "fixedIn"
  | "foundBy"
  | "generates"
  | "hasAddedFile"
  | "hasAssessmentFor"
  | "hasAssociatedVulnerability"
  | "hasConcludedLicense"
  | "hasDataFile"
  | "hasDeclaredLicense"
  | "hasDeletedFile"
  | "hasDependencyManifest"
  | "hasDistributionArtifact"
  | "hasDocumentation"
  | "hasDynamicLink"
  | "hasEvidence"
  | "hasExample"
  | "hasHost"
  | "hasInput"
  | "hasMetadata"
  | "hasOptionalComponent"
  | "hasOptionalDependency"
  | "hasOutput"
  | "hasPrerequisite"
  | "hasProvidedDependency"
  | "hasRequirement"
  | "hasSpecification"
  | "hasStaticLink"
  | "hasTest"
  | "hasTestCase"
  | "hasVariant"
  | "invokedBy"
  | "modifiedBy"
  | "other"
  | "packagedBy"
  | "patchedBy"
  | "publishedBy"
  | "reportedBy"
  | "republishedBy"
  | "serializedInArtifact"
  | "testedOn"
  | "trainedOn"
  | "underInvestigationFor"
  | "usesTool";
export type Prop_RelationshipStartTime = string;
export type RelationshipCompleteness = {
  "@id"?: BlankNodeOrIRI;
  type?: "RelationshipCompleteness";
  [k: string]: unknown;
} & RelationshipCompletenessProps;
export type RelationshipCompletenessProps = SHACLClass & {
  [k: string]: unknown;
};
export type RelationshipType = {
  "@id"?: BlankNodeOrIRI;
  type?: "RelationshipType";
  [k: string]: unknown;
} & RelationshipTypeProps;
export type RelationshipTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type SupportType = {
  "@id"?: BlankNodeOrIRI;
  type?: "SupportType";
  [k: string]: unknown;
} & SupportTypeProps;
export type SupportTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type Dataset_ConfidentialityLevelType = {
  "@id"?: BlankNodeOrIRI;
  type?: "dataset_ConfidentialityLevelType";
  [k: string]: unknown;
} & Dataset_ConfidentialityLevelTypeProps;
export type Dataset_ConfidentialityLevelTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type Dataset_DatasetAvailabilityType = {
  "@id"?: BlankNodeOrIRI;
  type?: "dataset_DatasetAvailabilityType";
  [k: string]: unknown;
} & Dataset_DatasetAvailabilityTypeProps;
export type Dataset_DatasetAvailabilityTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type Dataset_DatasetType = {
  "@id"?: BlankNodeOrIRI;
  type?: "dataset_DatasetType";
  [k: string]: unknown;
} & Dataset_DatasetTypeProps;
export type Dataset_DatasetTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type Security_CvssSeverityType = {
  "@id"?: BlankNodeOrIRI;
  type?: "security_CvssSeverityType";
  [k: string]: unknown;
} & Security_CvssSeverityTypeProps;
export type Security_CvssSeverityTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type Security_ExploitCatalogType = {
  "@id"?: BlankNodeOrIRI;
  type?: "security_ExploitCatalogType";
  [k: string]: unknown;
} & Security_ExploitCatalogTypeProps;
export type Security_ExploitCatalogTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type Security_SsvcDecisionType = {
  "@id"?: BlankNodeOrIRI;
  type?: "security_SsvcDecisionType";
  [k: string]: unknown;
} & Security_SsvcDecisionTypeProps;
export type Security_SsvcDecisionTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type Security_VexJustificationType = {
  "@id"?: BlankNodeOrIRI;
  type?: "security_VexJustificationType";
  [k: string]: unknown;
} & Security_VexJustificationTypeProps;
export type Security_VexJustificationTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type Software_ContentIdentifierType = {
  "@id"?: BlankNodeOrIRI;
  type?: "software_ContentIdentifierType";
  [k: string]: unknown;
} & Software_ContentIdentifierTypeProps;
export type Software_ContentIdentifierTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type Software_FileKindType = {
  "@id"?: BlankNodeOrIRI;
  type?: "software_FileKindType";
  [k: string]: unknown;
} & Software_FileKindTypeProps;
export type Software_FileKindTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type Software_SbomType = {
  "@id"?: BlankNodeOrIRI;
  type?: "software_SbomType";
  [k: string]: unknown;
} & Software_SbomTypeProps;
export type Software_SbomTypeProps = SHACLClass & {
  [k: string]: unknown;
};
export type Software_SoftwarePurpose = {
  "@id"?: BlankNodeOrIRI;
  type?: "software_SoftwarePurpose";
  [k: string]: unknown;
} & Software_SoftwarePurposeProps;
export type Software_SoftwarePurposeProps = SHACLClass & {
  [k: string]: unknown;
};
export type AnyClass1 =
  | Ai_EnergyConsumption
  | Ai_EnergyConsumptionDescription
  | Ai_EnergyUnitType
  | Ai_SafetyRiskAssessmentType
  | AnnotationType
  | CreationInfo
  | DictionaryEntry
  | ExternalIdentifier
  | ExternalIdentifierType
  | ExternalMap
  | ExternalRef
  | ExternalRefType
  | HashAlgorithm
  | IndividualElement
  | LifecycleScopeType
  | NamespaceMap
  | PackageVerificationCode
  | PositiveIntegerRange
  | PresenceType
  | ProfileIdentifierType
  | Relationship
  | RelationshipCompleteness
  | RelationshipType
  | SpdxDocument
  | SupportType
  | Tool
  | Dataset_ConfidentialityLevelType
  | Dataset_DatasetAvailabilityType
  | Dataset_DatasetType
  | Expandedlicensing_ListedLicenseException
  | Extension_CdxPropertyEntry
  | Security_CvssSeverityType
  | Security_ExploitCatalogType
  | Security_SsvcDecisionType
  | Security_VexJustificationType
  | Simplelicensing_LicenseExpression
  | Simplelicensing_SimpleLicensingText
  | Software_ContentIdentifier
  | Software_ContentIdentifierType
  | Software_FileKindType
  | Software_SbomType
  | Software_SoftwarePurpose
  | Build_Build
  | Agent
  | Annotation
  | Bundle
  | Hash
  | LifecycleScopedRelationship
  | Organization
  | Person
  | SoftwareAgent
  | Expandedlicensing_ConjunctiveLicenseSet
  | Expandedlicensing_CustomLicenseAddition
  | Expandedlicensing_DisjunctiveLicenseSet
  | Expandedlicensing_IndividualLicensingInfo
  | Expandedlicensing_ListedLicense
  | Expandedlicensing_OrLaterOperator
  | Expandedlicensing_WithAdditionOperator
  | Extension_CdxPropertiesExtension
  | Security_CvssV2VulnAssessmentRelationship
  | Security_CvssV3VulnAssessmentRelationship
  | Security_CvssV4VulnAssessmentRelationship
  | Security_EpssVulnAssessmentRelationship
  | Security_ExploitCatalogVulnAssessmentRelationship
  | Security_SsvcVulnAssessmentRelationship
  | Security_Vulnerability
  | Bom
  | Expandedlicensing_CustomLicense
  | Security_VexAffectedVulnAssessmentRelationship
  | Security_VexFixedVulnAssessmentRelationship
  | Security_VexNotAffectedVulnAssessmentRelationship
  | Security_VexUnderInvestigationVulnAssessmentRelationship
  | Software_File
  | Software_Package
  | Software_Sbom
  | Software_Snippet
  | Ai_AIPackage
  | Dataset_DatasetPackage;

export interface SHACLClass {
  type:
    | IRI
    | (
        | "ai_EnergyConsumption"
        | "ai_EnergyConsumptionDescription"
        | "ai_EnergyUnitType"
        | "ai_SafetyRiskAssessmentType"
        | "AnnotationType"
        | "CreationInfo"
        | "DictionaryEntry"
        | "ExternalIdentifier"
        | "ExternalIdentifierType"
        | "ExternalMap"
        | "ExternalRef"
        | "ExternalRefType"
        | "HashAlgorithm"
        | "IndividualElement"
        | "LifecycleScopeType"
        | "NamespaceMap"
        | "PackageVerificationCode"
        | "PositiveIntegerRange"
        | "PresenceType"
        | "ProfileIdentifierType"
        | "Relationship"
        | "RelationshipCompleteness"
        | "RelationshipType"
        | "SpdxDocument"
        | "SupportType"
        | "Tool"
        | "dataset_ConfidentialityLevelType"
        | "dataset_DatasetAvailabilityType"
        | "dataset_DatasetType"
        | "expandedlicensing_ListedLicenseException"
        | "extension_CdxPropertyEntry"
        | "security_CvssSeverityType"
        | "security_ExploitCatalogType"
        | "security_SsvcDecisionType"
        | "security_VexJustificationType"
        | "simplelicensing_LicenseExpression"
        | "simplelicensing_SimpleLicensingText"
        | "software_ContentIdentifier"
        | "software_ContentIdentifierType"
        | "software_FileKindType"
        | "software_SbomType"
        | "software_SoftwarePurpose"
        | "build_Build"
        | "Agent"
        | "Annotation"
        | "Bundle"
        | "Hash"
        | "LifecycleScopedRelationship"
        | "Organization"
        | "Person"
        | "SoftwareAgent"
        | "expandedlicensing_ConjunctiveLicenseSet"
        | "expandedlicensing_CustomLicenseAddition"
        | "expandedlicensing_DisjunctiveLicenseSet"
        | "expandedlicensing_IndividualLicensingInfo"
        | "expandedlicensing_ListedLicense"
        | "expandedlicensing_OrLaterOperator"
        | "expandedlicensing_WithAdditionOperator"
        | "extension_CdxPropertiesExtension"
        | "security_CvssV2VulnAssessmentRelationship"
        | "security_CvssV3VulnAssessmentRelationship"
        | "security_CvssV4VulnAssessmentRelationship"
        | "security_EpssVulnAssessmentRelationship"
        | "security_ExploitCatalogVulnAssessmentRelationship"
        | "security_SsvcVulnAssessmentRelationship"
        | "security_Vulnerability"
        | "Bom"
        | "expandedlicensing_CustomLicense"
        | "security_VexAffectedVulnAssessmentRelationship"
        | "security_VexFixedVulnAssessmentRelationship"
        | "security_VexNotAffectedVulnAssessmentRelationship"
        | "security_VexUnderInvestigationVulnAssessmentRelationship"
        | "software_File"
        | "software_Package"
        | "software_Sbom"
        | "software_Snippet"
        | "ai_AIPackage"
        | "dataset_DatasetPackage"
      );
  [k: string]: unknown;
}
